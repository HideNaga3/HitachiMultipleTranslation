================================================================================
scripts_main - メイン処理スクリプト
================================================================================

このフォルダには、プロジェクトの成果物を生成するために使用された
主要なスクリプトが含まれています。

================================================================================
スクリプト一覧（実行順序）
================================================================================

【Phase 1: データ統合】

1. create_unified_csv.py
   - 機能: 8言語のCSVファイルを統合してLong形式に変換
   - 入力: output/各言語のCSV（英語、タガログ語、中国語など）
   - 出力: output/全言語統合_long形式.csv
   - データ: 524単語 x 8言語 = 4,192行（Long形式）

【Phase 2: テンプレート形式変換】

2. create_template_format_csv.py
   - 機能: Long形式からWide形式（テンプレート形式）に変換
   - 入力: output/全言語統合_long形式.csv
   - 出力: output/intermediate/全言語統合_テンプレート形式_*.csv
   - データ: 524行 x 39列（Wide形式、翻訳言語数含む）

【Phase 3: 並び替え】

3. reorder_template_by_vietnamese.py
   - 機能: ベトナム語の順序で全体を並び替え
   - 理由: ベトナム語固有の12語を保持するため
   - 入力: output/intermediate/全言語統合_テンプレート形式_*.csv
   - 出力: output/全言語統合_テンプレート形式_ベトナム語順.csv
   - データ: 524行（512 ベトナム語 + 12 他言語固有）

【Phase 4: インポート用CSV作成】

4. create_template_only.py
   - 機能: 9列（ja + 8言語）のみを抽出
   - 入力: output/全言語統合_テンプレート形式_ベトナム語順.csv
   - 出力: output/全言語統合_テンプレート_インポート用.csv
   - データ: 524行 x 9列（ja, en, fil-PH, zh, th, vi, my, id, km）

【Phase 5: 品質確認（逆翻訳）】

5. reverse_translate_to_japanese.py
   - 機能: Google Translation API で各言語を日本語に逆翻訳
   - 入力: output/全言語統合_テンプレート_インポート用.csv
   - 出力: output/逆翻訳_検証結果.xlsx
     * inputシート: 元の翻訳データ
     * outputシート: 逆翻訳結果
   - API: Google Cloud Translation API v2
   - バッチサイズ: 20行/リクエスト
   - 備考: .env ファイルから GOOGLE_API_KEY を読み込み

【Phase 6: Excel整形】

6. create_excel_with_headers.py
   - 機能: Excelファイルにヘッダー行を追加
   - 入力: output/逆翻訳_検証結果.xlsx
   - 出力: 成果物_20251023/02_逆翻訳_検証結果.xlsx
   - 形式:
     * inputシート: ヘッダー（青色） + データ524行
     * outputシート: ヘッダー（緑色） + データ524行

【Phase 7: core_files用CSV作成】

7. create_core_file_v2.py
   - 機能: 39列の完全版CSVをcore_filesフォルダに出力
   - 入力: output/intermediate/全言語統合_テンプレート形式_*.csv
   - 出力: core_files/output_csv_template_utf8bom.csv
   - データ: 524行 x 39列（翻訳言語数列を含む）

8. create_import_csv_38cols.py
   - 機能: 翻訳言語数列を削除してインポート用CSVを作成
   - 入力: core_files/output_csv_template_utf8bom.csv
   - 出力: 成果物_20251023/01_全言語統合_テンプレート_インポート用.csv
   - データ: 524行 x 38列（翻訳言語数列を除外）

【Phase 8: 成果物パッケージング】

9. create_deliverables.py
   - 機能: 成果物フォルダを作成し、全ファイルをコピー
   - 出力: 成果物_20251023/フォルダ
     * 01_全言語統合_テンプレート_インポート用.csv
     * 02_逆翻訳_検証結果.xlsx
     * 00_README.txt
     * ドキュメント_*.txt（3ファイル）

【Phase 9: ファイル最適化】

10. optimize_for_claude.py
    - 機能: プロジェクトファイルを整理してClaudeに最適化
    - 処理:
      * 古いログをアーカイブに移動
      * 中間ファイルをintermediateフォルダに移動
      * 包括的なログファイルを作成
    - 出力: for_claude/log.txt

【Phase 10: ログ保存・スクリプト整理】

11. save_project_log.py
    - 機能: セッション終了時のログを保存
    - 出力: for_claude/log_session_YYYYMMDD_HHMMSS.txt

12. organize_scripts.py
    - 機能: スクリプトをカテゴリ別に整理
    - 処理:
      * scripts_main/ - メインスクリプト
      * scripts/analysis/ - 分析系
      * scripts/check/ - チェック系
      * scripts/debug/ - デバッグ系
      * scripts/test/ - テスト系
      * scripts/extract/ - PDF抽出系
      * scripts/merge/ - マージ系
      * scripts/archive_old/ - 旧バージョン

================================================================================
主要な出力ファイル
================================================================================

【最終成果物】
  成果物_20251023/
    ├─ 00_README.txt - プロジェクト説明書
    ├─ 01_全言語統合_テンプレート_インポート用.csv - インポート用（38列）
    ├─ 02_逆翻訳_検証結果.xlsx - 品質確認用
    ├─ ドキュメント_逆翻訳分析.txt
    ├─ ドキュメント_CID確認.txt
    └─ ドキュメント_プロジェクトログ.txt

【中間ファイル】
  core_files/
    └─ output_csv_template_utf8bom.csv - 完全版（39列）

  output/
    ├─ 全言語統合_long形式.csv
    ├─ 全言語統合_テンプレート形式_ベトナム語順.csv
    ├─ 全言語統合_テンプレート_インポート用.csv
    ├─ 逆翻訳_検証結果.xlsx
    └─ intermediate/ - 中間生成ファイル

================================================================================
データフロー
================================================================================

[各言語CSV]
    ↓ (create_unified_csv.py)
[統合Long形式CSV: 4,192行 x 10列]
    ↓ (create_template_format_csv.py)
[テンプレートWide形式CSV: 524行 x 39列]
    ↓ (reorder_template_by_vietnamese.py)
[ベトナム語順CSV: 524行 x 39列]
    ↓ (create_template_only.py)
[インポート用CSV: 524行 x 9列]
    ↓ (reverse_translate_to_japanese.py)
[逆翻訳Excel: inputシート + outputシート]
    ↓ (create_excel_with_headers.py)
[ヘッダー付きExcel]
    ↓ (create_core_file_v2.py, create_import_csv_38cols.py)
[core_files: 39列 / 成果物: 38列]
    ↓ (create_deliverables.py)
[成果物フォルダ: 完全パッケージ]

================================================================================
技術仕様
================================================================================

【Python環境】
  - Python: 3.11
  - 仮想環境: .venv/

【主要ライブラリ】
  - pandas: 2.2.3 - データ処理
  - openpyxl: 3.1.5 - Excel処理
  - requests: - Google API呼び出し
  - python-dotenv: - 環境変数読み込み

【エンコーディング】
  - CSV: UTF-8 BOM
  - Excel: UTF-8
  - テキスト: UTF-8

【データ仕様】
  - 総単語数: 524語
  - 対象言語: 8言語（英語、タガログ語、中国語、タイ語、
                     ベトナム語、ミャンマー語、インドネシア語、
                     カンボジア語）
  - 並び順: ベトナム語順（512語） + 他言語固有（12語）

================================================================================
実行方法
================================================================================

【前提条件】
  1. Python 仮想環境を有効化
     > .venv\Scripts\activate

  2. 環境変数設定（逆翻訳実行時のみ）
     .env ファイルに GOOGLE_API_KEY を設定

【実行コマンド】
  > python scripts_main\[スクリプト名].py

【全体の再実行】
  上記の順序（1-12）で各スクリプトを実行

================================================================================
注意事項
================================================================================

1. 【CIDコード】
   - 入力CSVに57件のCIDコードが存在
   - 原因: PDF抽出時のpdfplumberの制限
   - 影響: 翻訳品質には大きな影響なし

2. 【Google Translation API】
   - 無料枠: 月500,000文字
   - 本プロジェクト: 約10-20万文字（無料枠内）
   - レート制限: 1秒待機（バッチ間）

3. 【ベトナム語順の理由】
   - ベトナム語: 512語（最多）
   - 他言語: 500語前後
   - ベトナム語固有の12語を保持するため

4. 【エンコーディング】
   - 必ずUTF-8 BOMを使用
   - システムインポート時の文字化け防止

================================================================================
トラブルシューティング
================================================================================

【問題: Google API エラー】
  - 解決策: .env ファイルのAPIキー確認
  - 解決策: 無料枠の使用量確認

【問題: CIDコードが表示される】
  - 原因: PDF抽出時の制限
  - 対処: 必要に応じて手動修正

【問題: 列数が合わない】
  - 確認: create_template_only.py で9列に絞られているか
  - 確認: create_import_csv_38cols.py で38列になっているか

【問題: 並び順がおかしい】
  - 確認: reorder_template_by_vietnamese.py を実行済みか
  - 確認: ベトナム語の順序が保持されているか

================================================================================
