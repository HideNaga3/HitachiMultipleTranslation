"""
成果物フォルダの作成とファイルコピー
"""
import os
import shutil
from datetime import datetime

project_root = r'C:\python_script\test_space\MitsubishiMultipleTranslation'
output_dir = os.path.join(project_root, 'output')
deliverables_dir = os.path.join(project_root, '成果物_20251023')
for_claude_dir = os.path.join(project_root, 'for_claude')

print("=" * 80)
print("成果物フォルダの作成")
print("=" * 80)
print(f"実行日時: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
print()

# 成果物フォルダ作成
os.makedirs(deliverables_dir, exist_ok=True)
print(f"フォルダ作成: {deliverables_dir}")
print()

# ファイルリスト
files_to_copy = {
    'output': [
        ('全言語統合_テンプレート_インポート用.csv', '01_全言語統合_テンプレート_インポート用.csv'),
        ('逆翻訳_検証結果.xlsx', '02_逆翻訳_検証結果.xlsx'),
    ],
    'for_claude': [
        ('reverse_translation_analysis.txt', 'ドキュメント_逆翻訳分析.txt'),
        ('input_csv_cid_check.txt', 'ドキュメント_CID確認.txt'),
        ('log.txt', 'ドキュメント_プロジェクトログ.txt'),
    ]
}

print("ファイルコピー:")
print("-" * 80)

total_copied = 0

# outputからコピー
for src_name, dst_name in files_to_copy['output']:
    src = os.path.join(output_dir, src_name)
    dst = os.path.join(deliverables_dir, dst_name)

    if os.path.exists(src):
        shutil.copy2(src, dst)
        size_mb = os.path.getsize(src) / 1024 / 1024
        print(f"[OK] {dst_name} ({size_mb:.2f} MB)")
        total_copied += 1
    else:
        print(f"[NG] {src_name} (見つかりません)")

print()

# for_claudeからコピー
for src_name, dst_name in files_to_copy['for_claude']:
    src = os.path.join(for_claude_dir, src_name)
    dst = os.path.join(deliverables_dir, dst_name)

    if os.path.exists(src):
        shutil.copy2(src, dst)
        size_kb = os.path.getsize(src) / 1024
        print(f"[OK] {dst_name} ({size_kb:.1f} KB)")
        total_copied += 1
    else:
        print(f"[NG] {src_name} (見つかりません)")

print()
print("=" * 80)
print("完了")
print("=" * 80)
print()
print(f"コピー完了: {total_copied}件")
print(f"出力先: {deliverables_dir}")
print()

# README作成
readme_content = """================================================================================
成果物一覧 - 三菱様_多言語翻訳_202510
================================================================================
作成日時: {datetime}

================================================================================
ファイル構成
================================================================================

【メインファイル】

1. 01_全言語統合_テンプレート_インポート用.csv
   - 説明: 8言語の翻訳データを統合したテンプレートCSV
   - 形式: Wide形式（各行が日本語単語、各列が言語）
   - サイズ: 524行 x 9列
   - 列構成:
     * ja: 日本語（基準）
     * en: 英語
     * fil-PH: タガログ語
     * zh: 中国語
     * th: タイ語
     * vi: ベトナム語
     * my: ミャンマー語
     * id: インドネシア語
     * km: カンボジア語
   - 用途: システムへのインポート
   - エンコーディング: UTF-8 BOM

2. 02_逆翻訳_検証結果.xlsx
   - 説明: 翻訳品質確認用のExcelファイル
   - シート構成:
     * inputシート: 元の翻訳データ
     * outputシート: Google Translate APIで日本語に逆翻訳した結果
   - サイズ: 524行 x 9列（両シート）
   - 用途: 翻訳品質の検証
   - 備考: 両シートの座標は完全に一致

【ドキュメント】

3. ドキュメント_逆翻訳分析.txt
   - 逆翻訳処理の詳細分析レポート
   - CIDコード問題の調査結果
   - 翻訳品質の評価

4. ドキュメント_CID確認.txt
   - 入力CSVのCIDコード検出結果
   - 57件のCIDコード詳細

5. ドキュメント_プロジェクトログ.txt
   - プロジェクト全体のログ
   - 各フェーズの完了状況
   - 技術仕様と使用ライブラリ

================================================================================
データ仕様
================================================================================

総単語数: 524語
  - ベトナム語固有: 12語
  - 他言語と共通: 512語

翻訳カバレッジ: 95.66%
  - 英語: 500語
  - タガログ語: 500語
  - 中国語: 500語
  - タイ語: 499語
  - ベトナム語: 512語
  - ミャンマー語: 500語
  - インドネシア語: 500語
  - カンボジア語: 499語

並び順: ベトナム語の順序に基づく
  - ベトナム語の512語を優先
  - 残り12語を末尾に追加

================================================================================
既知の問題と対処
================================================================================

【CIDコード】
  - 検出数: 57件（英語21件、タイ語14件、カンボジア語22件）
  - 原因: PDF抽出時にpdfplumberが特殊文字をCIDコードとして記録
  - 種類:
    * (cid:9) = タブ文字
    * (cid:1143), (cid:544), (cid:814) = ダイアクリティカルマークや特殊文字
  - 影響: 翻訳品質には影響なし
  - 対処: 必要に応じて手動修正

【翻訳品質】
  - 逆翻訳による確認済み
  - 多くの翻訳は正確
  - 一部の訳語は類義語に変換（例: "清掃" → "クリーン"）
  - 意味は保持されている

================================================================================
インポート手順
================================================================================

1. 01_全言語統合_テンプレート_インポート用.csv を開く
2. エンコーディング: UTF-8 BOM で読み込み
3. ヘッダー行（1行目）を確認
4. データの整合性を確認
5. システムにインポート

【注意事項】
  - CIDコードが含まれる行は手動確認推奨
  - 重要な用語は逆翻訳結果と照合推奨
  - エンコーディングはUTF-8 BOMを維持

================================================================================
品質確認手順
================================================================================

1. 02_逆翻訳_検証結果.xlsx を開く
2. inputシート と outputシート を並べて表示
3. 同じ行の内容を比較
4. 重要な用語の翻訳精度を確認
5. 必要に応じて修正

【確認ポイント】
  - 日本語（input）と逆翻訳（output）の意味が一致するか
  - 専門用語が正確に翻訳されているか
  - CIDコードが問題になる箇所はないか

================================================================================
技術情報
================================================================================

【使用ツール】
  - Python 3.11
  - pdfplumber 0.11.4 (PDF抽出)
  - pandas 2.2.3 (データ処理)
  - openpyxl 3.1.5 (Excel処理)
  - Google Cloud Translation API v2 (逆翻訳)

【処理概要】
  1. PDF抽出: pdfplumberでPDFから表データを抽出
  2. データ統合: 8言語のCSVを統合してlong形式に
  3. ピボット変換: long形式からwide形式に変換
  4. 並び替え: ベトナム語の順序でソート
  5. フィルター: 必要な列のみを抽出
  6. 逆翻訳: Google Translate APIで品質確認
  7. 最適化: ファイル整理とアーカイブ

【エンコーディング】
  - CSV: UTF-8 BOM
  - Excel: UTF-8
  - テキスト: UTF-8

================================================================================
サポート
================================================================================

質問や問題がある場合は、以下のドキュメントを参照してください：
  - ドキュメント_プロジェクトログ.txt: 全体概要
  - ドキュメント_逆翻訳分析.txt: 翻訳品質の詳細
  - ドキュメント_CID確認.txt: CIDコード問題の詳細

================================================================================
""".format(datetime=datetime.now().strftime('%Y-%m-%d %H:%M:%S'))

readme_file = os.path.join(deliverables_dir, '00_README.txt')
with open(readme_file, 'w', encoding='utf-8') as f:
    f.write(readme_content)

print(f"README作成: {readme_file}")
print()
print("=" * 80)
