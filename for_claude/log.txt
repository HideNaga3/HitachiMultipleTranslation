================================================================================
プロジェクトログ - 三菱様_多言語翻訳_202510
================================================================================
最終更新: 2025-10-23 14:23:09

================================================================================
プロジェクト概要
================================================================================

目的: 建設関連職種の多言語辞書PDFから表データを抽出し、CSV形式で保存・加工

対象言語:
  - 日本語（基準）
  - 英語、タガログ語、中国語、タイ語、ベトナム語、ミャンマー語、インドネシア語、カンボジア語

================================================================================
完了済みタスク
================================================================================

Phase 1: PDF抽出（完了）
  - pdfplumberを使用してPDFから表データを抽出
  - 8言語のPDFファイルから個別CSVを作成
  - 出力: output/[言語名]_pdfplumber_抽出_最終版.csv

Phase 2: データ統合（完了）
  - 全言語のCSVを統合してlong形式のCSVを作成
  - 出力: output/全言語統合_pdfplumber_最終版.csv
  - 総行数: 4,010行（日本語523 + 8言語の翻訳）

Phase 3: ピボット変換（完了）
  - long形式からwide形式に変換（pivot）
  - 各行が日本語単語、各列が言語
  - 出力: output/全言語統合_テンプレート形式.csv

Phase 4: データ並び替え（完了）
  - ベトナム語の順序をカテゴリとして使用
  - ベトナム語固有の512語 + 他言語固有の12語 = 524語
  - 全データを保持しながら並び替え
  - 出力: output/全言語統合_テンプレート形式_ベトナム語並び順.csv

Phase 5: テンプレート作成（完了）
  - インポート用に必要な列のみをフィルター
  - 列: ja, en, fil-PH, zh, th, vi, my, id, km（9列）
  - 出力: output/全言語統合_テンプレート_インポート用.csv
  - サイズ: 524行 x 9列

Phase 6: 逆翻訳検証（完了）
  - Google Translate API を使用して各言語を日本語に逆翻訳
  - 翻訳品質の確認
  - 出力: output/逆翻訳_検証結果.xlsx
    - inputシート: 元の翻訳データ
    - outputシート: 逆翻訳結果
  - 処理数: 約4,000件の翻訳

Phase 7: ファイル最適化（完了）
  - for_claudeディレクトリの整理（不要なログをアーカイブ）
  - outputディレクトリの整理（中間ファイルを移動）
  - 重要ファイルのみを残す

================================================================================
最終成果物
================================================================================

1. 全言語統合_テンプレート_インポート用.csv (0.12 MB)
   - 524行 x 9列
   - インポート準備完了
   - 日本語 + 8言語の翻訳

2. 逆翻訳_検証結果.xlsx (0.11 MB)
   - inputシート: 元データ
   - outputシート: 逆翻訳結果
   - 品質確認用

================================================================================
重要な技術情報
================================================================================

CIDコード問題:
  - 57件のCIDコードが入力データに存在
  - 原因: PDF抽出時にpdfplumberが特殊文字をCIDコードとして記録
  - 分布: 英語21件、タイ語14件、カンボジア語22件
  - 種類:
    * (cid:9) = タブ文字
    * (cid:1143), (cid:544), (cid:814) = ダイアクリティカルマークや特殊文字
  - 対処: 現状維持（翻訳品質には影響なし）

翻訳品質:
  - 逆翻訳の結果、多くの翻訳が正確であることを確認
  - 一部の訳語は類義語に変換（例: "清掃" → "クリーン"）
  - 意味は保持されている

データ完全性:
  - 全524行のデータを保持
  - 欠損値なし（95.66%の翻訳カバレッジ）
  - ベトナム語固有: 12語
  - 他言語と共通: 512語

================================================================================
ディレクトリ構造
================================================================================

プロジェクトルート/
├── 建設関連PDF/              # 入力PDFファイル（8言語）
├── output/                   # 最終成果物
│   ├── 全言語統合_テンプレート_インポート用.csv
│   ├── 逆翻訳_検証結果.xlsx
│   └── intermediate/         # 中間ファイル（アーカイブ）
├── scripts/                  # Pythonスクリプト
│   ├── extract_tables_from_pdf.py
│   ├── unify_all_languages.py
│   ├── pivot_unified_csv.py
│   ├── reorder_template_by_vietnamese.py
│   ├── create_template_only.py
│   ├── reverse_translate_to_japanese.py
│   └── check_reverse_translation.py
├── for_claude/               # Claude用ドキュメント
│   ├── log.txt               # このファイル
│   ├── reverse_translation_analysis.txt
│   ├── input_csv_cid_check.txt
│   ├── reverse_translation_check.txt
│   ├── reverse_translation_summary.txt
│   ├── optimization_report.txt
│   └── archive/              # 古いログ
└── .venv/                    # Python仮想環境

================================================================================
使用技術
================================================================================

Python ライブラリ:
  - pdfplumber 0.11.4    : PDF抽出
  - pandas 2.2.3          : データ処理
  - openpyxl 3.1.5        : Excel処理
  - google-cloud-translate: Google Translate API
  - python-dotenv         : 環境変数管理

API:
  - Google Cloud Translation API v2 (REST)
  - 認証: APIキー（.env）

エンコーディング:
  - CSV: UTF-8 BOM
  - Python: UTF-8

================================================================================
次回のセッションへの引継ぎ事項
================================================================================

完了済み:
  ✓ PDF抽出
  ✓ データ統合
  ✓ ピボット変換
  ✓ データ並び替え
  ✓ テンプレート作成
  ✓ 逆翻訳検証
  ✓ ファイル最適化

保留中の課題:
  - CIDコードの修正（必要に応じて）
  - PDFの再抽出（必要に応じて）

推奨次ステップ:
  1. 逆翻訳_検証結果.xlsx を開いて品質確認
  2. 重要な用語の翻訳を手動確認
  3. 必要に応じてCIDコードの手動修正
  4. 全言語統合_テンプレート_インポート用.csv をシステムにインポート

================================================================================
重要ファイルの場所
================================================================================

最終成果物:
  output/全言語統合_テンプレート_インポート用.csv
  output/逆翻訳_検証結果.xlsx

ドキュメント:
  for_claude/log.txt (このファイル)
  for_claude/reverse_translation_analysis.txt
  for_claude/input_csv_cid_check.txt
  for_claude/optimization_report.txt

主要スクリプト:
  scripts/extract_tables_from_pdf.py
  scripts/reverse_translate_to_japanese.py
  scripts/check_reverse_translation.py

設定ファイル:
  .env (APIキー - Git管理外)
  CLAUDE.md (プロジェクト設定)
  CLAUDE_GLOBAL.md (グローバル設定)

================================================================================
成果物フォルダ
================================================================================

フォルダ: 成果物_20251023/
作成日時: 2025-10-23 14:29:39

ファイル構成:
  00_README.txt                                (6.1 KB)  - 成果物の説明書
  01_全言語統合_テンプレート_インポート用.csv  (124 KB)  - メインCSV
  02_逆翻訳_検証結果.xlsx                      (117 KB)  - 品質確認用Excel
  ドキュメント_逆翻訳分析.txt                  (4.9 KB)  - 分析レポート
  ドキュメント_CID確認.txt                     (2.0 KB)  - CID詳細
  ドキュメント_プロジェクトログ.txt            (8.3 KB)  - 全体ログ

合計: 6ファイル (約252 KB)

================================================================================
プロジェクトステータス
================================================================================

現在の状態: ✓ 完了 + 追加作業実施中

全フェーズが正常に完了しました。
成果物は 成果物_20251023/ フォルダにまとめられています。
品質確認後、システムへのインポートが可能です。

================================================================================

[セッション追加] 2025-10-23（午後）

【実施内容】

1. GitHubリポジトリのクリーンアップ
   - HitachiMultipleTranslation_V2としてリポジトリをクローン
   - 全てのコミット履歴から.envファイルを削除
   - git filter-branchを使用して履歴を書き換え
   - リモートリポジトリに強制プッシュ
   - 結果: .envファイルが完全に削除され、セキュリティリスクを解消

2. Google Translation API接続確認
   - 仮想環境（.venv）が存在しないことを確認
   - ユーザーが仮想環境を再作成予定

3. 翻訳データの詳細解析
   - 全524語の日本語単語を分析
   - 各言語の翻訳状況を集計
   - 翻訳が必要な単語を国（言語）ごとに抽出

4. 国ごとの翻訳必要単語リスト作成
   - スクリプト作成: scripts/extract_words_by_language.py
   - 各言語で翻訳が空欄の日本語単語をCSVとTXTで出力
   - 出力先: for_claude/words_to_translate/
   - 結果:
     * 英語: 24語
     * タガログ語: 24語
     * 中国語: 24語
     * タイ語: 25語
     * ベトナム語: 12語
     * ミャンマー語: 24語
     * インドネシア語: 24語
     * カンボジア語: 25語

5. ユニークな翻訳必要単語リストの作成
   - スクリプト作成: scripts/create_unique_words_list.py
   - 全言語の空欄単語を統合してユニークリストを作成
   - 総数: 37語（重複を除く）
   - 全ての単語がインポート用CSV内に存在することを確認
   - 出力: for_claude/unique_words_to_translate.csv, .txt

6. エラーログシステムの構築
   - for_claude/error_log.md を新規作成
   - 今セッションで発生した3つのエラーを記録:
     * UnicodeEncodeError: PowerShellでの多言語文字表示エラー
     * TypeError: JSON serialization error (int64)
     * PowerShellパス解釈エラー: 仮想環境Python実行
   - CLAUDE_GLOBAL.mdにエラーログポリシーを追加
   - よくあるエラーパターンをドキュメント化

7. 日本語単語の並び順分析
   - スクリプト作成: scripts/analyze_japanese_order.py
   - 元のCSV（524語）は五十音順ではないことを確認
   - 翻訳必要な37語は五十音順でソートされていることを確認
   - 並び替えの選択肢を提示:
     1. CSV行番号順（元の順序）
     2. 五十音順（検索しやすい）
     3. 空欄言語数順（翻訳優先度）
     4. カテゴリー別（意味的グループ）
   - カテゴリー分類の提案:
     * 安全関連: 21語（感電、防止、予防、転倒、転落、落下、墜落）
     * 状態: 3語（不安定）
     * 動作: 6語（確認、嘔吐、準備）
     * 保険: 1語（健康保険）
     * 専門用語: 6語（丸セパレーター、けれん、基礎型枠）

【作成ファイル】
- scripts/extract_words_by_language.py
- scripts/count_words_by_language.py
- scripts/count_japanese_words_by_language.py
- scripts/create_unique_words_list.py
- scripts/check_words_in_categories.py
- scripts/analyze_japanese_order.py
- for_claude/error_log.md
- for_claude/translation_summary.md
- for_claude/unique_words_to_translate.csv, .txt
- for_claude/japanese_words_count_by_language.csv
- for_claude/language_word_count.csv
- for_claude/japanese_order_analysis.txt
- for_claude/words_to_translate/*.csv, *.txt (各言語)

【技術的な発見】
- インポート用CSVには「カテゴリー」列が存在しない
- 元のCSVの並び順は五十音順ではなく、PDFの元の分類順と推測
- PowerShellでの多言語文字出力はCP932エンコーディングの制約がある
- Pandasのint64型はJSON出力時にエラーになる

【次回への申し送り】
- 仮想環境の再作成が完了したらGoogle Translation API接続確認
- 翻訳必要な37語をどの順序で処理するか決定
- 必要に応じてカテゴリー列を追加してPandasカテゴリー型で並び替え
- Google Translation APIで空欄の翻訳を補完

【エラー対処記録】
- 詳細はfor_claude/error_log.mdに記載
- 主なエラー3件を記録し、対処法をドキュメント化
- 今後のエラー発生時も同ファイルに追記する運用を確立

================================================================================

【セッション追加】 2025-10-23（夕方）- PDF順序データの調査と取得
================================================================================

【作業内容】
1. CSVファイル構造の確認
2. PDF抽出CSVにPage列と番号列の存在確認
3. 統合処理で番号列が削除されたか調査
4. ベトナム語のPage・番号データを取得してマッピングCSV作成

【調査結果】

■ ファイル構造の確認
- `output/`フォルダには最終的な統合CSVのみ存在
- `output/intermediate/`フォルダに元のPDF抽出CSVを発見

■ PDF抽出CSVの構造（ベトナム語）
ファイル: output/intermediate/ベトナム語_pdfplumber_抽出_最終版.csv
- 総行数: 539行
- 列構成: 言語、Page、番号、単語、翻訳
- ✅ **Page列** あり（1～50ページ）
- ✅ **番号列** あり（1.0～28.0、ページ内での番号）

■ 統合処理の調査
ファイル1: output/intermediate/全言語統合_pdfplumber_最終版.csv
- 総行数: 4,146行（全8言語）
- ✅ **Page列** あり
- ✅ **番号列** あり

ファイル2: output/intermediate/全言語統合_テンプレート形式_ベトナム語順序.csv
- 総行数: 524行
- ❌ **Page列** なし
- ❌ **番号列** なし

ファイル3: output/全言語統合_テンプレート_インポート用.csv（最終版）
- 総行数: 524行
- ❌ **Page列** なし
- ❌ **番号列** なし

**結論**: 統合処理の途中（pdfplumber版→テンプレート形式への変換時）にPage列と番号列が削除された

■ ベトナム語のPage・番号データ抽出
スクリプト: scripts/extract_vietnamese_order.py
出力ファイル: output/intermediate/日本語_ベトナム語Page番号マッピング.csv

マッチング結果:
- マッチング成功率: **97.7%** (512/524)
- マッチしない単語: 12語（ベトナム語PDFに存在しない単語）
  1. 感電（する）
  2. 防止（する）
  3. 予防（する）
  4. 転倒（する）
  5. 不安定（な）
  6. 嘔吐（する）
  7. 転落（する）
  8. 落下（する）
  9. 墜落（する）
  10. 丸セパレーター （丸セパ）
  11. 基礎型枠 （メタルフォーム）
  12. ケレン

マッピングCSVの構造:
- 列: CSV行、日本語、Page、番号、マッチ
- Page範囲: 1～50
- 番号範囲: 1.0～28.0

【作成したファイル】
- scripts/list_vietnamese_files.py
- scripts/check_vietnamese_pdf_structure.py
- scripts/check_unified_csv_structure.py
- scripts/extract_vietnamese_order.py
- output/intermediate/日本語_ベトナム語Page番号マッピング.csv
- for_claude/vietnamese_files_list.txt
- for_claude/vietnamese_pdf_structure.txt
- for_claude/unified_csv_structure.txt
- for_claude/vietnamese_order_extraction.txt

【技術的な発見】
- 元のPDF抽出データにはPage列と番号列が保持されている
- 統合処理スクリプト（merge_all_languages_v2.py）では、COLUMN_MAPPINGSで定義された列のみが処理される
- Page列と番号列はマッピングに含まれていないため、統合後のテンプレート形式CSVには含まれない
- ベトナム語に存在しない12語は他の7言語には全て翻訳が存在する

【次回への申し送り】
- ベトナム語のPage・番号データを基準に単語を並び替え
- ベトナム語に存在しない12語の並び順をどうするか決定
  - オプション1: 他の言語（タイ語など）のPage・番号を参照
  - オプション2: 類似単語の近くに配置
  - オプション3: 最後にまとめて配置
- 並び替え後のCSVをインポート用として出力

================================================================================

【2025-10-23 夕方セッション】ログ更新完了
- PDF順序データの調査結果を記録
- ベトナム語Page・番号マッピングCSVの作成完了を記録
- 次回への申し送り事項を明記
